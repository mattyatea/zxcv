{
  "name": "webserver",
  "private": true,
  "type": "module",
  "scripts": {
    "build": "pnpm cf-typegen && pnpm typecheck && nuxt build",
    "build:staging": "pnpm cf-typegen && CLOUDFLARE_ENV=staging nuxt build",
    "dev:migrate": "pnpm migrate:local && nuxt dev",
    "dev": "pnpm cf-typegen && nuxt dev",
    "generate": "nuxt generate",
    "preview": "pnpm run build && cd .output && wrangler dev",
    "preview:staging": "pnpm run build && cd .output && wrangler dev --env staging",
    "preview:simple": "pnpm run build && npx wrangler dev --cwd .output",
    "postinstall": "nuxt prepare",
    "deploy": "pnpm run build && wrangler deploy",
    "deploy:staging": "pnpm run build:staging && wrangler deploy",
    "cf-typegen": "test \"$SKIP_CF_TYPEGEN\" = \"1\" && echo \"Skipping cf-typegen\" || wrangler types",
    "typegen": "pnpm cf-typegen && pnpm prisma:generate",
    "prisma:generate": "prisma generate",
    "migrate:local": "wrangler d1 migrations apply zxcv-db --local",
    "migrate:local:staging": "wrangler d1 migrations apply zxcv-staging --local --env staging",
    "migrate:staging": "wrangler d1 migrations apply zxcv-staging --remote --env staging",
    "migrate:prod": "wrangler d1 migrations apply zxcv-db --remote",
    "test": "vitest run",
    "test:watch": "vitest",
    "test:coverage": "vitest run --coverage",
    "test:unit": "vitest run tests/unit",
    "test:integration": "vitest run tests/integration",
    "test:vue": "vitest run --config vitest.config.vue.mts",
    "test:vue:watch": "vitest --config vitest.config.vue.mts",
    "test:e2e": "playwright test",
    "test:e2e:ui": "playwright test --ui",
    "test:e2e:debug": "playwright test --debug",
    "test:e2e:headed": "playwright test --headed",
    "test:e2e:report": "playwright show-report",
    "lint": "biome lint ./app/**/*.{ts,tsx,vue,js,jsx} ./server --diagnostic-level=warn",
    "lint:fix": "biome lint --write ./app/**/*.{ts,tsx,vue,js,jsx} ./server --diagnostic-level=warn",
    "format": "biome format --write ./app ./server",
    "format:check": "biome format ./app ./server",
    "check": "biome check ./app/**/*.{ts,tsx,vue,js,jsx} ./server",
    "check:fix": "biome check --write ./app/**/*.{ts,tsx,vue,js,jsx} ./server",
    "check:fix:hard": "biome check --write --unsafe ./app/**/*.{ts,tsx,vue,js,jsx} ./server",
    "typecheck": "vue-tsc --noEmit && tsc --noEmit",
    "prepare": "husky"
  },
  "packageManager": "pnpm@10.12.1",
  "dependencies": {
    "@cloudflare/workers-types": "^4.20250719.0",
    "@nuxtjs/tailwindcss": "^6.14.0",
    "@orpc/client": "^1.7.4",
    "@orpc/contract": "^1.7.4",
    "@orpc/openapi": "^1.7.4",
    "@orpc/openapi-client": "^1.7.4",
    "@orpc/server": "^1.7.4",
    "@orpc/zod": "^1.7.4",
    "@pinia/nuxt": "^0.11.2",
    "@prisma/adapter-d1": "^6.12.0",
    "@prisma/client": "^6.12.0",
    "arctic": "^3.7.0",
    "hono": "4.8.2",
    "jose": "^6.0.12",
    "lodash-es": "^4.17.21",
    "marked": "^16.1.1",
    "mimetext": "^3.0.27",
    "nanoid": "^5.1.5",
    "nuxt": "^4.0.0",
    "pinia": "^3.0.3",
    "vue": "^3.5.17",
    "vue-router": "^4.5.1",
    "zod": "4.0.5"
  },
  "devDependencies": {
    "@cloudflare/vitest-pool-workers": "0.8.44",
    "@nuxt/test-utils": "^3.19.2",
    "@nuxtjs/icon": "2.6.0",
    "@playwright/test": "^1.54.1",
    "@tailwindcss/forms": "^0.5.10",
    "@tailwindcss/typography": "^0.5.16",
    "@testing-library/vue": "^8.1.0",
    "@types/lodash-es": "^4.17.12",
    "@types/node": "^24.0.14",
    "@vitejs/plugin-vue": "^6.0.0",
    "@vitest/coverage-v8": "^3.2.4",
    "@vue/language-server": "^3.0.3",
    "@vue/test-utils": "^2.4.6",
    "h3": "^1.15.3",
    "happy-dom": "^18.0.1",
    "husky": "^9.1.7",
    "lint-staged": "^16.1.2",
    "nitro-cloudflare-dev": "^0.2.2",
    "nitropack": "^2.12.3",
    "playwright": "^1.54.1",
    "prisma": "^6.12.0",
    "tsx": "^4.20.3",
    "typescript": "5.8.3",
    "vitest": "^3.2.4",
    "vue-tsc": "^3.1.1",
    "wrangler": "^4.26.0"
  },
  "lint-staged": {
    "*.{ts,tsx,js,jsx,vue}": [
      "pnpm biome check --write --no-errors-on-unmatched"
    ],
    "*.{ts,tsx}": [
      "bash -c 'pnpm typecheck'"
    ]
  },
  "version": "1.2.3"
}
