{
  "$schema": "https://biomejs.dev/schemas/2.1.2/schema.json",
  "vcs": {
    "enabled": true,
    "clientKind": "git",
    "useIgnoreFile": true
  },
  "files": {
    "ignoreUnknown": true,
    "ignore": [
      "node_modules/**",
      "dist/**",
      "build/**",
      "coverage/**",
      ".nuxt/**",
      ".output/**",
      "public/**",
      "migrations/**",
      "cli/dist/**",
      "cli/release/**",
      "cli/.*.bun-build",
      ".vscode/**",
      ".git/**",
      ".wrangler/**",
      ".cache/**",
      "webserver/.nuxt/**",
      "webserver/.output/**",
      "**/*.d.ts"
    ]
  },
  "formatter": {
    "enabled": true,
    "formatWithErrors": false,
    "indentStyle": "tab",
    "indentWidth": 2,
    "lineEnding": "lf",
    "lineWidth": 100,
    "attributePosition": "auto"
  },
  "linter": {
    "enabled": true,
    "includes": [
      "**",
      "!**/*.d.ts",
      "!**/.nuxt/**",
      "!**/.output/**",
      "!**/dist/**",
      "!**/node_modules/**"
    ],
    "rules": {
      "recommended": true,
      "complexity": {
        "noBannedTypes": "error",
        "noExtraBooleanCast": "error",
        "noStaticOnlyClass": "off",
        "noUselessCatch": "error",
        "noUselessConstructor": "error",
        "noUselessLoneBlockStatements": "error",
        "noUselessRename": "error",
        "noUselessSwitchCase": "error",
        "noUselessTernary": "error",
        "noVoid": "error",
        "useArrowFunction": "off",
        "useLiteralKeys": "error",
        "useRegexLiterals": "error"
      },
      "correctness": {
        "noConstAssign": "error",
        "noConstantCondition": "error",
        "noEmptyCharacterClassInRegex": "error",
        "noEmptyPattern": "error",
        "noGlobalObjectCalls": "error",
        "noInvalidConstructorSuper": "error",
        "noUnreachable": "error",
        "noUnreachableSuper": "error",
        "noUnsafeFinally": "error",
        "noUnsafeOptionalChaining": "error",
        "noUnusedLabels": "error",
        "noUnusedVariables": "off",
        "noUnusedImports": "error",
        "useIsNan": "error",
        "useValidForDirection": "error",
        "useYield": "error"
      },
      "security": {
        "noGlobalEval": "error"
      },
      "style": {
        "noDefaultExport": "off",
        "noImplicitBoolean": "error",
        "noInferrableTypes": "error",
        "noNamespace": "error",
        "noNegationElse": "off",
        "noNonNullAssertion": "warn",
        "noParameterAssign": "off",
        "noRestrictedGlobals": "error",
        "noShoutyConstants": "error",
        "noUnusedTemplateLiteral": "error",
        "useAsConstAssertion": "error",
        "useBlockStatements": "error",
        "useCollapsedElseIf": "error",
        "useConsistentArrayType": "error",
        "useConst": "error",
        "useDefaultParameterLast": "error",
        "useEnumInitializers": "error",
        "useExponentiationOperator": "error",
        "useForOf": "error",
        "useImportType": "error",
        "useLiteralEnumMembers": "error",
        "useNamingConvention": "off",
        "useNodejsImportProtocol": "error",
        "useNumberNamespace": "error",
        "useSelfClosingElements": "error",
        "useShorthandAssign": "error",
        "useSingleVarDeclarator": "error",
        "useTemplate": "error"
      },
      "suspicious": {
        "noArrayIndexKey": "error",
        "noAssignInExpressions": "error",
        "noAsyncPromiseExecutor": "error",
        "noCatchAssign": "error",
        "noClassAssign": "error",
        "noCommentText": "error",
        "noCompareNegZero": "error",
        "noConsole": "off",
        "noControlCharactersInRegex": "error",
        "noDebugger": "error",
        "noDoubleEquals": "error",
        "noDuplicateCase": "error",
        "noDuplicateClassMembers": "error",
        "noDuplicateObjectKeys": "error",
        "noDuplicateParameters": "error",
        "noEmptyBlockStatements": "error",
        "noExplicitAny": "warn",
        "noExtraNonNullAssertion": "error",
        "noFallthroughSwitchClause": "error",
        "noFunctionAssign": "error",
        "noGlobalAssign": "error",
        "noImportAssign": "error",
        "noImplicitAnyLet": "warn",
        "noMisleadingCharacterClass": "error",
        "noMisleadingInstantiator": "error",
        "noPrototypeBuiltins": "error",
        "noRedeclare": "error",
        "noShadowRestrictedNames": "error",
        "noSparseArray": "error",
        "noUnsafeDeclarationMerging": "error",
        "noUnsafeNegation": "error",
        "useGetterReturn": "error"
      }
    }
  },
  "javascript": {
    "formatter": {
      "jsxQuoteStyle": "double",
      "quoteProperties": "asNeeded",
      "trailingCommas": "all",
      "semicolons": "always",
      "arrowParentheses": "always",
      "bracketSpacing": true,
      "bracketSameLine": false,
      "quoteStyle": "double",
      "attributePosition": "auto"
    }
  },
  "overrides": [
    {
      "includes": [
        "**/*.d.ts"
      ],
      "linter": {
        "enabled": false
      }
    },
    {
      "includes": [
        "*.ts",
        "*.tsx"
      ],
      "linter": {
        "rules": {
          "correctness": {
            "noUndeclaredVariables": "off"
          }
        }
      }
    },
    {
      "includes": [
        "server/**/*.ts",
        "plugins/**/*.ts"
      ],
      "linter": {
        "rules": {
          "style": {
            "useNamingConvention": {
              "level": "error",
              "options": {
                "strictCase": false,
                "conventions": [
                  {
                    "selector": {
                      "kind": "function"
                    },
                    "formats": [
                      "camelCase",
                      "PascalCase"
                    ]
                  },
                  {
                    "selector": {
                      "kind": "variable"
                    },
                    "formats": [
                      "camelCase",
                      "PascalCase",
                      "CONSTANT_CASE"
                    ]
                  },
                  {
                    "selector": {
                      "kind": "typeLike"
                    },
                    "formats": [
                      "PascalCase"
                    ]
                  },
                  {
                    "selector": {
                      "kind": "objectLiteralProperty"
                    },
                    "formats": [
                      "camelCase",
                      "PascalCase",
                      "CONSTANT_CASE",
                      "snake_case"
                    ]
                  },
                  {
                    "selector": {
                      "kind": "typeProperty"
                    },
                    "formats": [
                      "camelCase",
                      "PascalCase",
                      "CONSTANT_CASE",
                      "snake_case"
                    ]
                  },
                  {
                    "selector": {
                      "kind": "typeMember"
                    },
                    "formats": [
                      "camelCase",
                      "PascalCase",
                      "CONSTANT_CASE",
                      "snake_case"
                    ]
                  },
                  {
                    "selector": {
                      "kind": "classMember"
                    },
                    "formats": [
                      "camelCase"
                    ]
                  },
                  {
                    "selector": {
                      "kind": "enum"
                    },
                    "formats": [
                      "PascalCase"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    {
      "includes": [
        "tests/**/*.ts",
        "tests/**/*.js",
        "*.test.ts"
      ]
    }
  ]
}
