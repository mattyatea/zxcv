{"version":3,"file":"Modal-DWgkDmQ5.js","sources":["../../../../components/common/Modal.vue"],"sourcesContent":["<template>\n  <Teleport to=\"body\">\n    <Transition name=\"modal\">\n      <div v-if=\"modelValue\" class=\"fixed inset-0 z-50 overflow-y-auto\">\n        <div class=\"flex min-h-screen items-center justify-center p-4 text-center sm:p-0\">\n          <!-- Background overlay -->\n          <div\n            class=\"modal-backdrop fixed inset-0 bg-black/60 backdrop-blur-sm\"\n            @click=\"handleClose\"\n          />\n\n          <!-- Modal panel -->\n          <Transition name=\"modal-content\">\n            <div\n              v-if=\"modelValue\"\n              :class=\"modalClasses\"\n              @click.stop\n              @mousedown=\"handleMouseDown\"\n              @touchstart=\"handleTouchStart\"\n              :style=\"modalStyle\"\n            >\n              <!-- Header -->\n              <div v-if=\"$slots.header || title\" class=\"modal-header\">\n                <slot name=\"header\">\n                  <h3 class=\"text-xl font-semibold text-gray-900 dark:text-white\">\n                    {{ title }}\n                  </h3>\n                </slot>\n                <button\n                  v-if=\"showClose\"\n                  @click=\"handleClose\"\n                  class=\"ml-auto rounded-lg p-1.5 text-gray-400 hover:bg-gray-100 hover:text-gray-900 dark:hover:bg-gray-700 dark:hover:text-white transition-all duration-200 hover:rotate-90\"\n                >\n                  <svg class=\"h-5 w-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n                  </svg>\n                </button>\n              </div>\n\n              <!-- Body -->\n              <div class=\"modal-body\">\n                <slot />\n              </div>\n\n              <!-- Footer -->\n              <div v-if=\"$slots.footer\" class=\"modal-footer\">\n                <slot name=\"footer\" />\n              </div>\n            </div>\n          </Transition>\n        </div>\n      </div>\n    </Transition>\n  </Teleport>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, ref, watch } from \"vue\";\n\ninterface Props {\n\tmodelValue: boolean;\n\ttitle?: string;\n\tsize?: \"sm\" | \"md\" | \"lg\" | \"xl\" | \"full\";\n\tshowClose?: boolean;\n\tpreventClose?: boolean;\n\tdraggable?: boolean;\n}\n\ntype Emits = (e: \"update:modelValue\", value: boolean) => void;\n\nconst props = withDefaults(defineProps<Props>(), {\n\tsize: \"md\",\n\tshowClose: true,\n\tpreventClose: false,\n\tdraggable: false,\n});\n\nconst emit = defineEmits<Emits>();\n\n// Modal dragging state\nconst position = ref({ x: 0, y: 0 });\nconst isDragging = ref(false);\nconst dragStart = ref({ x: 0, y: 0 });\n\n// Reset position when modal opens\nwatch(\n\t() => props.modelValue,\n\t(isOpen) => {\n\t\tif (isOpen) {\n\t\t\tposition.value = { x: 0, y: 0 };\n\t\t}\n\t},\n);\n\nconst modalClasses = computed(() => {\n\tconst base =\n\t\t\"modal-panel relative transform overflow-hidden rounded-2xl bg-white dark:bg-gray-900 text-left shadow-2xl\";\n\n\tconst sizes = {\n\t\tsm: \"sm:w-full sm:max-w-sm\",\n\t\tmd: \"sm:w-full sm:max-w-lg\",\n\t\tlg: \"sm:w-full sm:max-w-2xl\",\n\t\txl: \"sm:w-full sm:max-w-4xl\",\n\t\tfull: \"sm:w-full sm:max-w-7xl\",\n\t};\n\n\treturn [\n\t\tbase,\n\t\tsizes[props.size],\n\t\tprops.draggable && \"cursor-move select-none\",\n\t\tisDragging.value && \"transition-none\",\n\t]\n\t\t.filter(Boolean)\n\t\t.join(\" \");\n});\n\nconst modalStyle = computed(() => ({\n\ttransform: `translate(${position.value.x}px, ${position.value.y}px)`,\n}));\n\nconst handleClose = () => {\n\tif (!props.preventClose) {\n\t\temit(\"update:modelValue\", false);\n\t}\n};\n\n// Dragging functionality\nconst startDragging = (clientX: number, clientY: number) => {\n\tisDragging.value = true;\n\tdragStart.value = {\n\t\tx: clientX - position.value.x,\n\t\ty: clientY - position.value.y,\n\t};\n};\n\nconst handleMouseDown = (e: MouseEvent) => {\n\tif (!props.draggable) {\n\t\treturn;\n\t}\n\tif ((e.target as HTMLElement).closest(\"button\")) {\n\t\treturn;\n\t}\n\n\tstartDragging(e.clientX, e.clientY);\n\n\tconst handleMouseMove = (e: MouseEvent) => {\n\t\tif (!isDragging.value) {\n\t\t\treturn;\n\t\t}\n\t\tposition.value = {\n\t\t\tx: e.clientX - dragStart.value.x,\n\t\t\ty: e.clientY - dragStart.value.y,\n\t\t};\n\t};\n\n\tconst handleMouseUp = () => {\n\t\tisDragging.value = false;\n\t\twindow.removeEventListener(\"mousemove\", handleMouseMove);\n\t\twindow.removeEventListener(\"mouseup\", handleMouseUp);\n\t};\n\n\twindow.addEventListener(\"mousemove\", handleMouseMove);\n\twindow.addEventListener(\"mouseup\", handleMouseUp);\n};\n\nconst handleTouchStart = (e: TouchEvent) => {\n\tif (!props.draggable) {\n\t\treturn;\n\t}\n\tif ((e.target as HTMLElement).closest(\"button\")) {\n\t\treturn;\n\t}\n\n\tconst touch = e.touches[0];\n\tstartDragging(touch.clientX, touch.clientY);\n\n\tconst handleTouchMove = (e: TouchEvent) => {\n\t\tif (!isDragging.value) {\n\t\t\treturn;\n\t\t}\n\t\tconst touch = e.touches[0];\n\t\tposition.value = {\n\t\t\tx: touch.clientX - dragStart.value.x,\n\t\t\ty: touch.clientY - dragStart.value.y,\n\t\t};\n\t};\n\n\tconst handleTouchEnd = () => {\n\t\tisDragging.value = false;\n\t\twindow.removeEventListener(\"touchmove\", handleTouchMove);\n\t\twindow.removeEventListener(\"touchend\", handleTouchEnd);\n\t};\n\n\twindow.addEventListener(\"touchmove\", handleTouchMove, { passive: false });\n\twindow.addEventListener(\"touchend\", handleTouchEnd);\n};\n</script>\n\n<style scoped>\n/* Modal backdrop transition */\n.modal-enter-active,\n.modal-leave-active {\n  transition: opacity 0.3s cubic-bezier(0.25, 1, 0.5, 1);\n}\n\n.modal-enter-from,\n.modal-leave-to {\n  opacity: 0;\n}\n\n.modal-backdrop {\n  transition: opacity 0.3s cubic-bezier(0.25, 1, 0.5, 1);\n}\n\n/* Modal content transition */\n.modal-content-enter-active {\n  transition: all 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);\n}\n\n.modal-content-leave-active {\n  transition: all 0.2s cubic-bezier(0.25, 1, 0.5, 1);\n}\n\n.modal-content-enter-from {\n  opacity: 0;\n  transform: scale(0.9) translateY(20px);\n}\n\n.modal-content-leave-to {\n  opacity: 0;\n  transform: scale(0.95) translateY(10px);\n}\n\n/* Modal panel */\n.modal-panel {\n  transition: transform 0.3s cubic-bezier(0.34, 1.56, 0.64, 1), box-shadow 0.3s ease;\n  box-shadow: \n    0 20px 25px -5px rgba(0, 0, 0, 0.1),\n    0 10px 10px -5px rgba(0, 0, 0, 0.04);\n}\n\n.modal-panel:hover {\n  box-shadow: \n    0 25px 30px -5px rgba(0, 0, 0, 0.15),\n    0 15px 15px -5px rgba(0, 0, 0, 0.06);\n}\n\n/* Dragging state */\n.cursor-move:active {\n  cursor: grabbing;\n}\n\n/* Modal sections */\n.modal-header {\n  @apply flex items-center px-6 py-4 border-b border-gray-200 dark:border-gray-700;\n}\n\n.modal-body {\n  @apply px-6 py-4 max-h-[70vh] overflow-y-auto;\n}\n\n.modal-footer {\n  @apply flex items-center justify-end gap-3 px-6 py-4 border-t border-gray-200 dark:border-gray-700 bg-gray-50 dark:bg-gray-900/50;\n}\n\n/* Smooth scrollbar */\n.modal-body::-webkit-scrollbar {\n  width: 6px;\n}\n\n.modal-body::-webkit-scrollbar-track {\n  background: transparent;\n}\n\n.modal-body::-webkit-scrollbar-thumb {\n  background: theme('colors.gray.300');\n  border-radius: 3px;\n  transition: background 0.2s;\n}\n\n.modal-body::-webkit-scrollbar-thumb:hover {\n  background: theme('colors.gray.400');\n}\n\n.dark .modal-body::-webkit-scrollbar-thumb {\n  background: theme('colors.gray.700');\n}\n\n.dark .modal-body::-webkit-scrollbar-thumb:hover {\n  background: theme('colors.gray.600');\n}\n</style>"],"names":["_push","modelValue","$slots","title","showClose"],"mappings":";;;;;;;;;;;;;;;;AAsEA,UAAM,QAAQ;AAUd,UAAM,WAAW,IAAI,EAAE,GAAG,GAAG,GAAG,GAAG;AACnC,UAAM,aAAa,IAAI,KAAK;AACV,QAAI,EAAE,GAAG,GAAG,GAAG,GAAG;AAGpC;AAAA,MACC,MAAM,MAAM;AAAA,MACZ,CAAC,WAAW;AACX,YAAI,QAAQ;AACX,mBAAS,QAAQ,EAAE,GAAG,GAAG,GAAG,EAAA;AAAA,QAC7B;AAAA,MACD;AAAA,IAAA;AAGD,UAAM,eAAe,SAAS,MAAM;AACnC,YAAM,OACL;AAED,YAAM,QAAQ;AAAA,QACb,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,MAAM;AAAA,MAAA;AAGP,aAAO;AAAA,QACN;AAAA,QACA,MAAM,MAAM,IAAI;AAAA,QAChB,MAAM,aAAa;AAAA,QACnB,WAAW,SAAS;AAAA,MAAA,EAEnB,OAAO,OAAO,EACd,KAAK,GAAG;AAAA,IACX,CAAC;AAED,UAAM,aAAa,SAAS,OAAO;AAAA,MAClC,WAAW,aAAa,SAAS,MAAM,CAAC,OAAO,SAAS,MAAM,CAAC;AAAA,IAAA,EAC9D;;+BArHA,CAoDWA,WAAA;YAlDIC,KAAAA,YAAU;;cAWPA,KAAAA,YAAU;iDACR,aAAA,KAAY,4BAIZ,WAAA,KAAU;gBAGPC,KAAAA,OAAO,UAAUC,KAAAA,OAAK;;;yHAGxBA,KAAAA,KAAK,CAAA,OAAA;AAAA;kBAIJC,KAAAA,WAAS;;;;;;;;;;;;AAgBRF,gBAAAA,KAAAA,OAAO,QAAM;;;;;;;;;;;;;;;;;;;;;;;;;;"}