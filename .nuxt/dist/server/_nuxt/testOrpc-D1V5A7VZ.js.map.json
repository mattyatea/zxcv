{"file":"testOrpc-D1V5A7VZ.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA,UAAM,EAAE,KAAI,IAAK,WAAU;AAC3B,UAAM,SAAS,IAAI,IAAI;AACvB,UAAM,QAAQ,IAAI,IAAI;;mBAhCfA,eAAAC,WAAA,EAAA,OAAM,MAAK,GAAA,MAAA,CAAA,wDACyBC,KAAAA,GAAE,iBAAA,CAAA,0HAOlCA,KAAAA,GAAE,uBAAA,CAAA,yGAOFA,KAAAA,GAAE,sBAAA,CAAA;UAGIC,MAAA,MAAA,GAAM;+EACP,KAAK,UAAUA,MAAA,MAAA,GAAM,MAAA,CAAA,CAAA,CAAA,cAAA;AAAA;;;UAGpBA,MAAA,KAAA,GAAK;2FACN,KAAK,UAAUA,MAAA,KAAA,GAAK,MAAA,CAAA,CAAA,CAAA,cAAA;AAAA;;;;;;;;;;;;;","names":["_ssrRenderAttrs","_mergeProps","$t","_unref"],"sources":["../../../../pages/testOrpc.vue"],"sourcesContent":["<template>\n  <div class=\"p-8\">\n    <h1 class=\"text-2xl font-bold mb-4\">{{ $t('test.orpc.title') }}</h1>\n    \n    <div class=\"space-y-4\">\n      <button \n        @click=\"testHealth\" \n        class=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\"\n      >\n        {{ $t('test.orpc.healthCheck') }}\n      </button>\n      \n      <button \n        @click=\"testRuleCreate\" \n        class=\"bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600\"\n      >\n        {{ $t('test.orpc.ruleCreate') }}\n      </button>\n      \n      <div v-if=\"result\" class=\"mt-4 p-4 bg-gray-100 rounded\">\n        <pre>{{ JSON.stringify(result, null, 2) }}</pre>\n      </div>\n      \n      <div v-if=\"error\" class=\"mt-4 p-4 bg-red-100 text-red-700 rounded\">\n        <pre>{{ JSON.stringify(error, null, 2) }}</pre>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nconst { $rpc } = useNuxtApp();\nconst result = ref(null);\nconst error = ref(null);\n\nconst testHealth = async () => {\n\ttry {\n\t\terror.value = null;\n\t\tresult.value = await $rpc.health.check();\n\t\tconsole.log(\"Health check successful:\", result.value);\n\t} catch (err) {\n\t\terror.value = err;\n\t\tconsole.error(\"Health check failed:\", err);\n\t}\n};\n\nconst testRuleCreate = async () => {\n\ttry {\n\t\terror.value = null;\n\t\tresult.value = await $rpc.rules.create({\n\t\t\tname: \"test-rule\",\n\t\t\tdescription: \"Test rule from oRPC client\",\n\t\t\tcontent: \"# Test Rule\\n\\nThis is a test rule.\",\n\t\t\ttags: [\"test\"],\n\t\t\tvisibility: \"public\",\n\t\t});\n\t\tconsole.log(\"Rule create successful:\", result.value);\n\t} catch (err) {\n\t\terror.value = err;\n\t\tconsole.error(\"Rule create failed:\", err);\n\t}\n};\n</script>"],"version":3}