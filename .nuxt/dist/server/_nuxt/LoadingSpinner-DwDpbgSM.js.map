{"version":3,"file":"LoadingSpinner-DwDpbgSM.js","sources":["../../../../components/common/LoadingSpinner.vue"],"sourcesContent":["<template>\n  <div :class=\"containerClasses\">\n    <svg\n      :class=\"spinnerClasses\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      fill=\"none\"\n      viewBox=\"0 0 24 24\"\n    >\n      <circle\n        class=\"opacity-25\"\n        cx=\"12\"\n        cy=\"12\"\n        r=\"10\"\n        stroke=\"currentColor\"\n        stroke-width=\"4\"\n      />\n      <path\n        class=\"opacity-75\"\n        fill=\"currentColor\"\n        d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n      />\n    </svg>\n    <span v-if=\"text\" :class=\"textClasses\">{{ text }}</span>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from \"vue\";\n\ninterface Props {\n\tsize?: \"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\";\n\tcolor?: \"primary\" | \"white\" | \"gray\" | \"current\";\n\ttext?: string;\n\tfullscreen?: boolean;\n\toverlay?: boolean;\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n\tsize: \"md\",\n\tcolor: \"primary\",\n\tfullscreen: false,\n\toverlay: false,\n});\n\nconst containerClasses = computed(() => {\n\tconst base = \"flex items-center justify-center\";\n\n\tif (props.fullscreen) {\n\t\treturn `${base} fixed inset-0 z-50 bg-white/80 dark:bg-gray-950/80 backdrop-blur-sm`;\n\t}\n\n\tif (props.overlay) {\n\t\treturn `${base} absolute inset-0 z-10 bg-white/80 dark:bg-gray-900/80 backdrop-blur-sm rounded-[inherit]`;\n\t}\n\n\treturn `${base} ${props.text ? \"flex-col space-y-2\" : \"\"}`;\n});\n\nconst spinnerClasses = computed(() => {\n\tconst base = \"spinner animate-spin\";\n\n\tconst sizes = {\n\t\txs: \"w-3 h-3\",\n\t\tsm: \"w-4 h-4\",\n\t\tmd: \"w-6 h-6\",\n\t\tlg: \"w-8 h-8\",\n\t\txl: \"w-12 h-12\",\n\t};\n\n\tconst colors = {\n\t\tprimary: \"text-primary-500\",\n\t\twhite: \"text-white\",\n\t\tgray: \"text-gray-500\",\n\t\tcurrent: \"text-current\",\n\t};\n\n\treturn [base, sizes[props.size], colors[props.color]].join(\" \");\n});\n\nconst textClasses = computed(() => {\n\tconst sizes = {\n\t\txs: \"text-xs\",\n\t\tsm: \"text-sm\",\n\t\tmd: \"text-base\",\n\t\tlg: \"text-lg\",\n\t\txl: \"text-xl\",\n\t};\n\n\treturn [sizes[props.size], \"text-gray-600 dark:text-gray-400 font-medium\"].join(\" \");\n});\n</script>"],"names":["_ssrRenderAttrs","_mergeProps","text"],"mappings":";;;;;;;;;;;;;AAqCA,UAAM,QAAQ;AAOd,UAAM,mBAAmB,SAAS,MAAM;AACvC,YAAM,OAAO;AAEb,UAAI,MAAM,YAAY;AACrB,eAAO,GAAG,IAAI;AAAA,MACf;AAEA,UAAI,MAAM,SAAS;AAClB,eAAO,GAAG,IAAI;AAAA,MACf;AAEA,aAAO,GAAG,IAAI,IAAI,MAAM,OAAO,uBAAuB,EAAE;AAAA,IACzD,CAAC;AAED,UAAM,iBAAiB,SAAS,MAAM;AACrC,YAAM,OAAO;AAEb,YAAM,QAAQ;AAAA,QACb,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,MAAA;AAGL,YAAM,SAAS;AAAA,QACd,SAAS;AAAA,QACT,OAAO;AAAA,QACP,MAAM;AAAA,QACN,SAAS;AAAA,MAAA;AAGV,aAAO,CAAC,MAAM,MAAM,MAAM,IAAI,GAAG,OAAO,MAAM,KAAK,CAAC,EAAE,KAAK,GAAG;AAAA,IAC/D,CAAC;AAED,UAAM,cAAc,SAAS,MAAM;AAClC,YAAM,QAAQ;AAAA,QACb,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,MAAA;AAGL,aAAO,CAAC,MAAM,MAAM,IAAI,GAAG,8CAA8C,EAAE,KAAK,GAAG;AAAA,IACpF,CAAC;;mBAxFOA,eAAAC,WAAA,EAAA,OAAO,iBAAA,MAAA,GAAgB,MAAA,CAAA,gCAEjB,eAAA,KAAc;UAmBZC,KAAAA,MAAI;6CAAU,YAAA,KAAW,qBAAKA,KAAAA,IAAI;;;;;;;;;;;;;;"}