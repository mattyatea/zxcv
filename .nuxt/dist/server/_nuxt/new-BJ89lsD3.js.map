{"version":3,"file":"new-BJ89lsD3.js","sources":["../../../../pages/rules/new.vue"],"sourcesContent":["<template>\n  <div class=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n    <div class=\"mb-8\">\n      <h1 class=\"text-3xl font-bold text-gray-900 dark:text-white\">{{ $t('rules.createNewRule') }}</h1>\n      <p class=\"mt-2 text-sm text-gray-600 dark:text-gray-400\">\n        {{ $t('rules.shareWithCommunity') }}\n      </p>\n    </div>\n\n    <form @submit.prevent=\"handleSubmit\" class=\"space-y-6\">\n      <!-- Basic Information -->\n      <div class=\"card\">\n        <h2 class=\"text-lg font-medium text-gray-900 dark:text-white mb-4\">{{ $t('rules.basicInfo') }}</h2>\n        \n        <div class=\"space-y-4\">\n          <div>\n            <label for=\"name\" class=\"label\">{{ $t('rules.form.name') }}</label>\n            <input\n              id=\"name\"\n              v-model=\"form.name\"\n              type=\"text\"\n              required\n              pattern=\"[a-zA-Z0-9_-]+\"\n              class=\"input\"\n              placeholder=\"my-awesome-rule\"\n            />\n            <p class=\"mt-1 text-xs text-gray-500 dark:text-gray-400\">\n              {{ $t('rules.form.nameHint') }}\n            </p>\n          </div>\n\n\n          <div>\n            <label for=\"description\" class=\"label\">{{ $t('rules.form.description') }}</label>\n            <textarea\n              id=\"description\"\n              v-model=\"form.description\"\n              rows=\"3\"\n              class=\"input\"\n              :placeholder=\"$t('rules.form.descriptionPlaceholder')\"\n            />\n          </div>\n\n          <div>\n            <label for=\"visibility\" class=\"label\">{{ $t('rules.form.visibility') }}</label>\n            <select\n              id=\"visibility\"\n              v-model=\"form.visibility\"\n              class=\"input\"\n            >\n              <option value=\"public\">{{ $t('rules.form.visibilityOptions.public') }}</option>\n              <option value=\"private\">{{ $t('rules.form.visibilityOptions.private') }}</option>\n            </select>\n          </div>\n\n          <div>\n            <label for=\"organization\" class=\"label\">{{ $t('rules.form.organization') }} ({{ $t('common.optional') }})</label>\n            <select\n              id=\"organization\"\n              v-model=\"selectedOrganizationId\"\n              class=\"input\"\n              @change=\"updateOrganization\"\n            >\n              <option value=\"\">{{ $t('rules.form.noOrganization') }}</option>\n              <option v-for=\"organization in organizations\" :key=\"organization.id\" :value=\"organization.id\">\n                {{ organization.displayName }}\n              </option>\n            </select>\n            <p v-if=\"form.org\" class=\"mt-1 text-xs text-gray-500 dark:text-gray-400\">\n              {{ $t('rules.form.urlPreview') }} @{{ form.org }}/{{ form.name || 'rule-name' }}\n            </p>\n            <p class=\"mt-1 text-xs text-gray-500 dark:text-gray-400\">\n              {{ $t('rules.form.organizationHint') }}\n            </p>\n          </div>\n\n          <div>\n            <label for=\"tags\" class=\"label\">{{ $t('rules.form.tags') }}</label>\n            <div class=\"flex gap-2 mb-2\">\n              <input\n                v-model=\"tagInput\"\n                type=\"text\"\n                class=\"input flex-1\"\n                :placeholder=\"$t('rules.form.tagsPlaceholder')\"\n                @keydown.enter.prevent=\"addTag\"\n              />\n              <Button\n                type=\"button\"\n                @click=\"addTag\"\n                variant=\"secondary\"\n                size=\"sm\"\n              >\n                {{ $t('rules.form.addTag') }}\n              </Button>\n            </div>\n            <div class=\"flex flex-wrap gap-2\">\n              <span\n                v-for=\"(tag, index) in form.tags\"\n                :key=\"tag\"\n                class=\"inline-flex items-center px-3 py-1 rounded-full text-sm bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200\"\n              >\n                {{ tag }}\n                <button\n                  type=\"button\"\n                  @click=\"removeTag(index)\"\n                  class=\"ml-2 text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-200\"\n                >\n                  Ã—\n                </button>\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Rule Content -->\n      <div class=\"card\">\n        <h2 class=\"text-lg font-medium text-gray-900 dark:text-white mb-4\">{{ $t('rules.ruleContent') }}</h2>\n        \n        <div class=\"space-y-4\">\n          <div>\n            <label for=\"content\" class=\"label\">{{ $t('rules.form.content') }}</label>\n            <div class=\"mb-2\">\n              <Button\n                type=\"button\"\n                @click=\"showFileUpload = !showFileUpload\"\n                variant=\"ghost\"\n                size=\"sm\"\n              >\n                {{ showFileUpload ? $t('rules.form.writeDirectly') : $t('rules.form.uploadMarkdown') }}\n              </Button>\n            </div>\n            \n            <div v-if=\"showFileUpload\" class=\"mb-4\">\n              <input\n                type=\"file\"\n                accept=\".md,.markdown\"\n                @change=\"handleFileUpload\"\n                class=\"block w-full text-sm text-gray-500 dark:text-gray-400\n                  file:mr-4 file:py-2 file:px-4\n                  file:rounded-full file:border-0\n                  file:text-sm file:font-semibold\n                  file:bg-blue-50 file:text-blue-700\n                  dark:file:bg-blue-900 dark:file:text-blue-200\n                  hover:file:bg-blue-100 dark:hover:file:bg-blue-800\"\n              />\n            </div>\n            \n            <textarea\n              id=\"content\"\n              v-model=\"form.content\"\n              rows=\"15\"\n              required\n              class=\"input font-mono text-sm\"\n              :placeholder=\"$t('rules.form.contentPlaceholder')\"\n            />\n            <p class=\"mt-1 text-xs text-gray-500 dark:text-gray-400\">\n              {{ $t('rules.form.markdownSupported') }}\n            </p>\n          </div>\n        </div>\n      </div>\n\n      <!-- Actions -->\n      <div class=\"flex justify-end gap-4\">\n        <Button\n          :tag=\"NuxtLink\"\n          to=\"/rules\"\n          variant=\"secondary\"\n        >\n          {{ $t('common.cancel') }}\n        </Button>\n        <Button\n          type=\"submit\"\n          :loading=\"loading\"\n          :disabled=\"loading\"\n          variant=\"primary\"\n        >\n          {{ loading ? $t('rules.creating') : $t('rules.createRule') }}\n        </Button>\n      </div>\n\n      <div v-if=\"error\" class=\"rounded-md bg-red-50 dark:bg-red-900/20 p-4\">\n        <p class=\"text-sm text-red-800 dark:text-red-400\">{{ error }}</p>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script setup>\nimport { onMounted, ref } from \"vue\";\nimport { useAuthStore } from \"~/stores/auth\";\n\ndefinePageMeta({\n\tmiddleware: \"auth\",\n});\n\nconst { t } = useI18n();\n\nuseHead({\n\ttitle: t(\"rules.newRuleTitle\"),\n});\n\nconst form = ref({\n\tname: \"\",\n\torg: \"\",\n\tdescription: \"\",\n\tvisibility: \"public\",\n\torganizationId: \"\",\n\ttags: [],\n\tcontent: \"\",\n});\n\nconst tagInput = ref(\"\");\nconst organizations = ref([]);\nconst loading = ref(false);\nconst error = ref(\"\");\nconst selectedOrganizationId = ref(\"\");\nconst showFileUpload = ref(false);\n\nconst handleFileUpload = (event) => {\n\tconst file = event.target.files[0];\n\tif (file && (file.name.endsWith(\".md\") || file.name.endsWith(\".markdown\"))) {\n\t\tconst reader = new FileReader();\n\t\treader.onload = (e) => {\n\t\t\tform.value.content = e.target.result;\n\t\t};\n\t\treader.readAsText(file);\n\t} else {\n\t\terror.value = t(\"rules.messages.invalidFileType\");\n\t}\n};\n\nconst addTag = () => {\n\tconst tag = tagInput.value.trim().toLowerCase();\n\tif (tag && !form.value.tags.includes(tag)) {\n\t\tform.value.tags.push(tag);\n\t\ttagInput.value = \"\";\n\t}\n};\n\nconst removeTag = (index) => {\n\tform.value.tags.splice(index, 1);\n};\n\nconst updateOrganization = () => {\n\tconst selected = organizations.value.find((org) => org.id === selectedOrganizationId.value);\n\tif (selected) {\n\t\tform.value.org = selected.name;\n\t\tform.value.organizationId = selected.id;\n\t} else {\n\t\tform.value.org = \"\";\n\t\tform.value.organizationId = \"\";\n\t}\n};\n\nconst { $rpc } = useNuxtApp();\n\nconst handleSubmit = async () => {\n\tloading.value = true;\n\terror.value = \"\";\n\n\ttry {\n\t\tconst response = await $rpc.rules.create(form.value);\n\t\t// If posted to an organization, redirect to the organization-scoped URL\n\t\tif (form.value.org) {\n\t\t\tawait navigateTo(`/rules/@${form.value.org}/${form.value.name}`);\n\t\t} else {\n\t\t\t// Get the current user's username from auth store\n\t\t\tconst authStore = useAuthStore();\n\t\t\tif (authStore.user?.username) {\n\t\t\t\tawait navigateTo(`/rules/@${authStore.user.username}/${form.value.name}`);\n\t\t\t} else {\n\t\t\t\t// Fallback: If username is not available, show error\n\t\t\t\terror.value = t(\"rules.messages.createError\");\n\t\t\t}\n\t\t}\n\t} catch (err) {\n\t\terror.value = err.message || t(\"rules.messages.createError\");\n\t} finally {\n\t\tloading.value = false;\n\t}\n};\n\nconst fetchOrganizations = async () => {\n\ttry {\n\t\tconst response = await $rpc.organizations.list();\n\t\torganizations.value = response;\n\t} catch (error) {\n\t\tconsole.error(\"Failed to fetch organizations:\", error);\n\t}\n};\n\nonMounted(() => {\n\tfetchOrganizations();\n});\n</script>"],"names":["_ssrRenderAttrs","_mergeProps","$t","_ssrRenderAttr","_ssrInterpolate","_ssrIncludeBooleanAttr","_ssrLooseContain","_ssrLooseEqual","_ssrRenderList","_push","_parent","NuxtLink"],"mappings":"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"}