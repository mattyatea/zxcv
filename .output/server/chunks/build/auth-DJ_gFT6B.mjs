import{g as e,v as a,a as r,n as l}from"./server.mjs";const s=e("auth",()=>{const e=a.ref(null),s=a.ref(null),u=a.ref(null),n=a.ref(!1),t=a.computed(()=>!!e.value&&!!s.value),login=async a=>{n.value=!0;try{const l=r().$rpc,n=await l.auth.login({email:a.email,password:a.password});return s.value=n.accessToken,u.value=n.refreshToken,e.value=n.user,n}catch(e){throw await logout(),e}finally{n.value=!1}},logout=async()=>{e.value=null,s.value=null,u.value=null,await l("/login")};return{user:a.readonly(e),accessToken:a.readonly(s),refreshToken:a.readonly(u),isLoading:a.readonly(n),isAuthenticated:t,login:login,register:async e=>{n.value=!0;try{const a=r().$rpc,l=await a.auth.register(e);return await login({email:e.email,password:e.password}),l}finally{n.value=!1}},logout:logout,refreshAccessToken:async()=>{if(!u.value)throw new Error("No refresh token available");try{const e=r().$rpc,a=await e.auth.refresh({refreshToken:u.value});return s.value=a.accessToken,u.value=a.refreshToken,a}catch(e){throw await logout(),e}},fetchCurrentUser:async()=>{if(!s.value)return null;try{const a=r().$rpc,l=await a.users.settings();return e.value={id:l.id,email:l.email,username:l.username,emailVerified:l.email_verified},l}catch(e){return console.error("Failed to fetch current user:",e),null}},updateUser:a=>{e.value&&(e.value={...e.value,...a})},setAuthData:async a=>{s.value=a.accessToken,u.value=a.refreshToken,e.value=a.user},initializeAuth:()=>{}}});export{s as u};
//# sourceMappingURL=auth-DJ_gFT6B.mjs.map
