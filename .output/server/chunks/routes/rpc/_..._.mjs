import{R as e}from"../../_/index3.mjs";import{d as o,r,s as t,a as s,g as n}from"../../nitro/nitro.mjs";import{v as a,a as i}from"../../_/router.mjs";import{O as l,o as c}from"../../_/client.DwfV9Oyl.mjs";import"../../_/index4.mjs";import"node:events";import"node:process";import"cloudflare:workers";import"node:buffer";import"node:timers";import"@prisma/client";import"node:util";const d=new e(i,{plugins:[],interceptors:[c(e=>{throw console.log("oRPC onError interceptor:",{error:e,isORPCError:e instanceof l,code:null==e?void 0:e.code,message:null==e?void 0:e.message}),e})]}),u=o(async e=>{var o,i;console.log("RPC handler called:",{method:e.node.req.method,url:e.node.req.url,path:e.path});const c=e.context;if(!c.cloudflare){const e={DB:globalThis.DB||void 0,R2:globalThis.R2||void 0,EMAIL_SENDER:globalThis.EMAIL_SENDER||void 0,KV_CACHE:globalThis.KV_CACHE||void 0,JWT_SECRET:globalThis.JWT_SECRET||"test-secret",JWT_ALGORITHM:"HS256",JWT_EXPIRES_IN:"1h",EMAIL_FROM:"test@example.com",FRONTEND_URL:"http://localhost:3000",RATE_LIMIT_ANONYMOUS:"100",RATE_LIMIT_AUTHENTICATED:"1000",RATE_LIMIT_API_KEY:"5000"};c.cloudflare={env:e,context:{waitUntil:()=>{},passThroughOnException:()=>{},props:{}},request:new Request("http://localhost")}}try{const i=await async function(e){const o=n(e,"authorization");if(!(null==o?void 0:o.startsWith("Bearer ")))return;const r=o.substring(7),t=e.context.cloudflare.env;if(t)try{const e=await a(r,t);if(!e)return;return{id:e.sub,email:e.email,username:e.username,emailVerified:e.emailVerified||!1}}catch{return}}(e),u=new URL(e.node.req.url||"",`http://${e.node.req.headers.host||"localhost"}`),p=new Headers;for(const[o,r]of Object.entries(e.node.req.headers))r&&p.set(o,Array.isArray(r)?r.join(", "):String(r));const m="GET"!==e.node.req.method&&"HEAD"!==e.node.req.method?await r(e):void 0,h=new Request(u,{method:e.node.req.method,headers:p,body:m});let E;console.log("Request URL:",u.toString()),console.log("Request method:",e.node.req.method),console.log("User authenticated:",!!i);try{E=await d.handle(h,{prefix:"/rpc",context:{user:i,env:c.cloudflare.env,cloudflare:c.cloudflare}})}catch(e){throw console.error("Handler error details:",{error:e,message:null==e?void 0:e.message,code:null==e?void 0:e.code,stack:null==e?void 0:e.stack,isORPCError:e instanceof l}),e}if(console.log("Response matched:",E.matched),console.log("Response status:",null==(o=E.response)?void 0:o.status),!E.matched)return t(e,404,"Not Found"),{error:"Not found"};t(e,E.response.status),E.response.headers.forEach((o,r)=>{s(e,r,o)});const R=E.response.headers.get("content-type");return(null==R?void 0:R.includes("application/json"))?await E.response.json():await E.response.text()}catch(o){if(console.error("RPC Handler Error:",o),console.error("Error type:",null==(i=null==o?void 0:o.constructor)?void 0:i.name),console.error("Is ORPCError:",o instanceof l),o&&"object"==typeof o&&"response"in o&&o.response instanceof Response){const r=o.response;console.log("Error has Response object, status:",r.status),t(e,r.status),r.headers.forEach((o,r)=>{s(e,r,o)});const n=r.headers.get("content-type");return(null==n?void 0:n.includes("application/json"))?await r.json():await r.text()}if(o instanceof l||o&&"object"==typeof o&&"code"in o&&"__isORPCError"in o){const r=o;console.log("Handling ORPCError:",{code:r.code,message:r.message});const s={UNAUTHORIZED:401,FORBIDDEN:403,NOT_FOUND:404,BAD_REQUEST:400,CONFLICT:409,INTERNAL_SERVER_ERROR:500}[r.code]||500;return t(e,s),{defined:!1,code:r.code,status:s,message:r.message||"An error occurred",data:r.data}}return console.error("Unhandled error type, returning 500"),t(e,500),{defined:!1,code:"INTERNAL_SERVER_ERROR",status:500,message:"Internal server error"}}});export{u as default};
//# sourceMappingURL=_..._.mjs.map
