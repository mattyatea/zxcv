{"version":3,"file":"client.DwfV9Oyl.mjs","sources":["../../../../node_modules/.pnpm/@orpc+shared@1.7.4/node_modules/@orpc/shared/dist/index.mjs","../../../../node_modules/.pnpm/@orpc+standard-server@1.7.4/node_modules/@orpc/standard-server/dist/index.mjs","../../../../node_modules/.pnpm/@orpc+client@1.7.4/node_modules/@orpc/client/dist/shared/client.DHOfWE0c.mjs","../../../../node_modules/.pnpm/@orpc+client@1.7.4/node_modules/@orpc/client/dist/shared/client.DwfV9Oyl.mjs"],"sourcesContent":null,"names":["resolveMaybeOptionalOptions","rest","toArray","value","Array","isArray","once","fn","cached","result","isAsyncIteratorObject","maybe","next","Symbol","asyncIterator","fallbackAsyncDisposeSymbol","for","asyncDisposeSymbol","asyncDispose","AsyncIteratorClass","isDone","isExecuteComplete","cleanup","constructor","this","lastOperationPromise","Promise","resolve","args","catch","then","sequential","async","done","err","onError","callback","options","error","intercept","interceptors","main","options2","index","interceptor","newOptions","parseEmptyableJSON","text","JSON","parse","stringifyJSON","stringify","findDeepMatches","check","payload","segments","maps","values","push","forEach","v","i","isObject","key","proto","Object","getPrototypeOf","prototype","isTypescriptObject","clone","map","NullProtoObj","e","create","freeze","value2","EventEncoderError","TypeError","EventDecoderError","ErrorEvent","Error","data","super","message","decodeEventMessage","encoded","lines","replace","split","event","id","retry","comments","line","indexOf","slice","maybeInteger","Number","parseInt","isInteger","toString","EventDecoder","incomplete","feed","chunk","lastCompleteIndex","lastIndexOf","completes","onEvent","end","EventDecoderStream","TransformStream","decoder","start","controller","enqueue","transform","flush","assertEventId","includes","assertEventRetry","assertEventComment","comment","encodeEventMessage","output","encodeEventComments","assertEventName","encodeEventData","EVENT_SOURCE_META_SYMBOL","withEventMeta","container","meta","Proxy","get","target","prop","receiver","Reflect","getEventMeta","generateContentDisposition","filename","encodeURIComponent","c","charCodeAt","toUpperCase","str","hex","String","fromCharCode","getFilenameFromContentDisposition","contentDisposition","encodedFilenameStarMatch","match","decodeURIComponent","encodedFilenameMatch","flattenHeader","header","length","join","COMMON_ORPC_ERROR_DEFS","BAD_REQUEST","status","UNAUTHORIZED","FORBIDDEN","NOT_FOUND","METHOD_NOT_SUPPORTED","NOT_ACCEPTABLE","TIMEOUT","CONFLICT","PRECONDITION_FAILED","PAYLOAD_TOO_LARGE","UNSUPPORTED_MEDIA_TYPE","UNPROCESSABLE_CONTENT","TOO_MANY_REQUESTS","CLIENT_CLOSED_REQUEST","INTERNAL_SERVER_ERROR","NOT_IMPLEMENTED","BAD_GATEWAY","SERVICE_UNAVAILABLE","GATEWAY_TIMEOUT","fallbackORPCErrorStatus","code","fallbackORPCErrorMessage","ORPCError","defined","isORPCErrorStatus","toJSON","toORPCError","cause","isORPCErrorJson","json","validKeys","keys","some","k","createORPCErrorFromJson","mapEventIterator","iterator","mappedError","mappedValue","return","CompositeStandardLinkPlugin","plugins","sort","a","b","order","init","plugin","StandardLink","codec","sender","clientInterceptors","call","path","input","path2","input2","request","encode","response","request2","decode","STANDARD_RPC_JSON_SERIALIZER_BUILT_IN_TYPES","StandardRPCJsonSerializer","customSerializers","customJsonSerializers","Set","custom","type","size","serialize","blobs","condition","Blob","Date","isNaN","getTime","toISOString","URL","RegExp","from","Map","entries","deserialize","getBlob","ref","currentRef","preSegment","segment","item","BigInt","NaN","pattern","flags","toHttpPath","StandardRPCLinkCodec","serializer","baseUrl","url","maxUrlLength","fallbackMethod","expectedMethod","method","headers","pathname","lastEventId","merged","mergeStandardHeaders","serialized","FormData","getUrl","searchParams","append","body","signal","isOk","deserialized","isBodyOk","find","def","StandardRPCSerializer","jsonSerializer","enableFormData","meta_","form","set","blob","StandardRPCLink","linkClient"],"mappings":"","x_google_ignoreList":[0,1,2,3]}