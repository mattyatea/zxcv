import{E as e,m as i}from"./router.mjs";import"./client.DwfV9Oyl.mjs";import"node:buffer";import"../nitro/nitro.mjs";import"node:events";import"node:process";import"cloudflare:workers";import"node:timers";import"@prisma/client";import"node:util";var t=Object.defineProperty,__publicField=(e,i,r)=>((e,i,r)=>i in e?t(e,i,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[i]=r)(e,"symbol"!=typeof i?i+"":i,r);class EmailVerificationService{constructor(i,t){__publicField(this,"prisma"),__publicField(this,"emailService"),__publicField(this,"env"),this.prisma=i,this.emailService=new e(t),this.env=t}async createVerificationToken(e){const t=i(),r=Math.floor(Date.now()/1e3)+86400;return await this.prisma.emailVerification.create({data:{id:i(),userId:e,token:t,expiresAt:r}}),t}async sendVerificationEmail(e,i,t){try{const r=await this.createVerificationToken(e),a={email:i,verificationToken:r,verificationUrl:`${this.env.APP_URL||this.env.FRONTEND_URL||"https://zxcv.dev"}/verifyemail?token=${r}`,userLocale:t},s=this.emailService.generateEmailVerificationEmail(a);return await this.emailService.sendEmail(s)}catch(e){return!1}}async verifyEmail(e){try{const i=await this.prisma.emailVerification.findUnique({where:{token:e},include:{user:!0}});if(!i)return{success:!1,message:"Invalid verification token"};const t=Math.floor(Date.now()/1e3);return i.expiresAt<t?{success:!1,message:"Verification token has expired"}:i.usedAt?{success:!1,message:"Verification token has already been used"}:(await this.prisma.emailVerification.update({where:{id:i.id},data:{usedAt:t}}),await this.prisma.user.update({where:{id:i.userId},data:{emailVerified:!0}}),{success:!0,userId:i.userId})}catch(e){return{success:!1,message:"Internal server error"}}}async resendVerificationEmail(e,i){try{const t=await this.prisma.user.findUnique({where:{email:e}});return!t||(!!t.emailVerified||(await this.prisma.emailVerification.updateMany({where:{userId:t.id,usedAt:null},data:{usedAt:Math.floor(Date.now()/1e3)}}),await this.sendVerificationEmail(t.id,e,i)))}catch(e){return!1}}}export{EmailVerificationService};
//# sourceMappingURL=emailVerification.mjs.map
