import{S as t,F as r}from"./index3.mjs";import{S as a,a as s,b as o,s as i}from"./openapi-client.D3eD5ojB.mjs";import{t as n,f as c,i as d,d as u,u as p,e as h,h as l}from"./router.mjs";import{v as f,a as m,d as w,s as g,i as y}from"./client.DwfV9Oyl.mjs";const P=(()=>{const e=function(){};return e.prototype=Object.create(null),Object.freeze(e.prototype),e})();function splitPath(t){const[r,...a]=t.split("/");return""===a[a.length-1]?a.slice(0,-1):a}function getMatchParams(t,r){const a=new P;for(const[s,o]of r){const r=s<0?t.slice(-1*s).join("/"):t[s];if("string"==typeof o)a[o]=r;else{const t=r.match(o);if(t)for(const r in t.groups)a[r]=t.groups[r]}}return a}function addRoute(t,r="",a,s){const o=splitPath(a);let i=t.root,n=0;const c=[];for(let t=0;t<o.length;t++){const r=o[t];if(r.startsWith("**")){i.wildcard||(i.wildcard={key:"**"}),i=i.wildcard,c.push([-t,r.split(":")[1]||"_",2===r.length]);break}if("*"===r||r.includes(":")){i.param||(i.param={key:"*"}),i=i.param;const a="*"===r;c.push([t,a?"_"+n++:_getParamMatcher(r),a]);continue}const a=i.static?.[r];if(a)i=a;else{const t={key:r};i.static||(i.static=new P),i.static[r]=t,i=t}}const d=c.length>0;i.methods||(i.methods=new P),i.methods[r]||(i.methods[r]=[]),i.methods[r].push({data:s||null,paramsMap:d?c:void 0}),d||(t.static[a]=i)}function _getParamMatcher(t){if(!t.includes(":",1))return t.slice(1);const r=t.replace(/:(\w+)/g,(t,r)=>`(?<${r}>[^/]+)`).replace(/\./g,"\\.");return new RegExp(`^${r}$`)}function findRoute(t,r="",a,s){"/"===a[a.length-1]&&(a=a.slice(0,-1));const o=t.static[a];if(o&&o.methods){const t=o.methods[r]||o.methods[""];if(void 0!==t)return t[0]}const i=splitPath(a),n=_lookupTree(t,t.root,r,i,0)?.[0];if(void 0!==n)return{data:n.data,params:n.paramsMap?getMatchParams(i,n.paramsMap):void 0}}function _lookupTree(t,r,a,s,o){if(o===s.length){if(r.methods){const t=r.methods[a]||r.methods[""];if(t)return t}if(r.param&&r.param.methods){const t=r.param.methods[a]||r.param.methods[""];if(t){const r=t[0].paramsMap;if(r?.[r?.length-1]?.[2])return t}}if(r.wildcard&&r.wildcard.methods){const t=r.wildcard.methods[a]||r.wildcard.methods[""];if(t){const r=t[0].paramsMap;if(r?.[r?.length-1]?.[2])return t}}return}const i=s[o];if(r.static){const n=r.static[i];if(n){const r=_lookupTree(t,n,a,s,o+1);if(r)return r}}if(r.param){const i=_lookupTree(t,r.param,a,s,o+1);if(i)return i}if(r.wildcard&&r.wildcard.methods)return r.wildcard.methods[a]||r.wildcard.methods[""]}class StandardOpenAPICodec{constructor(t){this.serializer=t}async decode(t,r,a){if("compact"===c("defaultInputStructure",a["~orpc"].route.inputStructure)){const a="GET"===t.method?this.serializer.deserialize(t.url.searchParams):this.serializer.deserialize(await t.body());return void 0===a?r:w(a)?{...r,...a}:a}const deserializeSearchParams=()=>this.serializer.deserialize(t.url.searchParams);return{params:r,get query(){const t=deserializeSearchParams();return Object.defineProperty(this,"query",{value:t,writable:!0}),t},set query(t){Object.defineProperty(this,"query",{value:t,writable:!0})},headers:t.headers,body:this.serializer.deserialize(await t.body())}}encode(t,r){const a=c("defaultSuccessStatus",r["~orpc"].route.successStatus);if("compact"===c("defaultOutputStructure",r["~orpc"].route.outputStructure))return{status:a,headers:{},body:this.serializer.serialize(t)};if(!this.#t(t))throw new Error(`\n        Invalid "detailed" output structure:\n        • Expected an object with optional properties:\n          - status (number 200-399)\n          - headers (Record<string, string | string[]>)\n          - body (any)\n        • No extra keys allowed.\n\n        Actual value:\n          ${g(t)}\n      `);return{status:t.status??a,headers:t.headers??{},body:this.serializer.serialize(t.body)}}encodeError(t){return{status:t.status,headers:{},body:this.serializer.serialize(t.toJSON(),{outputFormat:"plain"})}}#t(t){return!!w(t)&&(!(t.headers&&!w(t.headers))&&!(void 0!==t.status&&("number"!=typeof t.status||!Number.isInteger(t.status)||y(t.status))))}}class StandardOpenAPIMatcher{filter;tree=function(){return{root:{key:""},static:new P}}();pendingRouters=[];constructor(t={}){this.filter=t.filter??!0}init(t,r=[]){const a=n({router:t,path:r},r=>{if(!f(this.filter,r))return;const{path:a,contract:s}=r,o=c("defaultMethod",s["~orpc"].route.method),n=function(t){return i(t).replace(/\/\{\+([^}]+)\}/g,"/**:$1").replace(/\/\{([^}]+)\}/g,"/:$1")}(s["~orpc"].route.path??m(a));d(s)?addRoute(this.tree,o,n,{path:a,contract:s,procedure:s,router:t}):addRoute(this.tree,o,n,{path:a,contract:s,procedure:void 0,router:t})});this.pendingRouters.push(...a.map(t=>({...t,httpPathPrefix:m(t.path),laziedPrefix:u(t.router).prefix})))}async match(t,r){if(this.pendingRouters.length){const t=[];for(const a of this.pendingRouters)if(!a.laziedPrefix||r.startsWith(a.laziedPrefix)||r.startsWith(a.httpPathPrefix)){const{default:t}=await p(a.router);this.init(t,a.path)}else t.push(a);this.pendingRouters=t}const a=findRoute(this.tree,t,r);if(a){if(!a.data.procedure){const{default:t}=await p(h(a.data.router,a.data.path));if(!d(t))throw new Error(`\n          [Contract-First] Missing or invalid implementation for procedure at path: ${m(a.data.path)}.\n          Ensure that the procedure is correctly defined and matches the expected contract.\n        `);a.data.procedure=l(t,a.data.contract)}return{path:a.data.path,procedure:a.data.procedure,params:a.params?(s=a.params,Object.fromEntries(Object.entries(s).map(([t,r])=>[t,decodeURIComponent(r)]))):void 0};var s}}}class StandardOpenAPIHandler extends t{constructor(t,r){const i=new a(r),n=new s(r),c=new o(i,n);super(t,new StandardOpenAPIMatcher(r),new StandardOpenAPICodec(c),r)}}class OpenAPIHandler extends r{constructor(t,r={}){super(new StandardOpenAPIHandler(t,r),r)}}export{OpenAPIHandler as O};
//# sourceMappingURL=index2.mjs.map
