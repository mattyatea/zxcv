name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: 'backend/package-lock.json'
        
    - name: Install dependencies
      working-directory: backend
      run: npm ci
      
    - name: Run type checking
      working-directory: backend
      run: npm run typecheck
      
    - name: Run linting
      working-directory: backend
      run: npm run check
      
    - name: Run tests
      working-directory: backend
      run: npm run test
      
    - name: Run test coverage
      working-directory: backend
      run: npm run test:coverage
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        directory: backend/coverage
        fail_ci_if_error: true
        verbose: true
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: 'backend/package-lock.json'
        
    - name: Install dependencies
      working-directory: backend
      run: npm ci
      
    - name: Run security audit
      working-directory: backend
      run: npm audit --audit-level=high
      
    - name: Run dependency check
      working-directory: backend
      run: npx better-npm-audit audit --level=high

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [test, security]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: 'backend/package-lock.json'
        
    - name: Install dependencies
      working-directory: backend
      run: npm ci
      
    - name: Generate OpenAPI schema
      working-directory: backend
      run: npm run schema
      
    - name: Validate build can succeed
      working-directory: backend
      run: npx wrangler deploy --dry-run --compatibility-date=2024-01-01
      env:
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}