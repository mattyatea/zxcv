name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4


      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Generate Prisma Client
        run: pnpm run --filter backend prisma:generate

      - name: Type check
        run: pnpm run --filter backend typecheck

      - name: Lint and format check
        run: pnpm run --filter backend check

      - name: Run tests
        run: pnpm run --filter backend test
        env:
          NODE_ENV: test
          JWT_SECRET: test-jwt-secret-for-ci
          REFRESH_TOKEN_SECRET: test-refresh-token-secret-for-ci

  security:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4


      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run security audit
        run: pnpm run --filter backend audit --audit-level moderate

      - name: Check for known vulnerabilities
        run: pnpm run --filter backend audit --json | jq '.vulnerabilities | length' || echo "No vulnerabilities found"

  build:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [test, security]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4


      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Generate Prisma Client
        run: pnpm run --filter backend prisma:generate

      - name: Generate API schema
        run: pnpm run --filter backend schema

      - name: Verify build preparation
        run: |
          echo "Build preparation successful"
          echo "Ready for deployment"