name: CI

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4


      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.node-version'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Generate Prisma Client
        run: pnpm run prisma:generate

      - name: Generate Cloudflare types
        run: pnpm run cf-typegen

      - name: Type check
        run: pnpm run typecheck

      - name: Lint and format check
        run: pnpm run check

      - name: Run tests
        run: pnpm run test
        env:
          NODE_ENV: test
          JWT_SECRET: test-jwt-secret-for-ci
          REFRESH_TOKEN_SECRET: test-refresh-token-secret-for-ci

  security:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    continue-on-error: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4


      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.node-version'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run security audit
        run: pnpm audit --audit-level moderate || true

      - name: Check for known vulnerabilities
        run: pnpm audit --json | jq '.vulnerabilities | length' || echo "No vulnerabilities found"

  build:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [test, security]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4


      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.node-version'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Cache Nuxt build
        uses: actions/cache@v4
        with:
          path: |
            .nuxt
            .output
          key: ${{ runner.os }}-nuxt-build-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-nuxt-build-

      - name: Generate Prisma Client
        run: pnpm run prisma:generate

      - name: Generate Cloudflare types
        run: pnpm run cf-typegen

      - name: Build Nuxt application
        run: pnpm run build

      - name: Verify build output
        run: |
          if [ -d ".output" ]; then
            echo "✅ Build output directory exists"
            ls -la .output/
          else
            echo "❌ Build output directory not found"
            exit 1
          fi